Chickweight
ChickWeight
help(ChickWeight)
is.data.frame(ChickWeight)
is.vector(ChickWeight)
nrow(ChickWeight)
ncolumn(ChickWeight)
ncol(ChickWeight)
head(ChickWeight)
tail(ChickWeight)
ChickWeight$weight
ChickWight[1,1]
ChickWeight[1,1]
ChickeWeight$weight[5]
ChickWeight$weight[c(5:20)]
ChcikWeight$weight[>30]
ChcikWeight$weight[is>30]
ChickWeight$weight[is>30]
ChickWeight$weight[>30]
ChickWeight$weight[ChickWeight$weight>30]
ChickWeight$weight[ChickWeight$Time>5]
dataset_with_weight_greater_than_seventy = ChickWeight[ChickWeight$weight>70]
dataset_with_weight_greater_than_seventy = ChickWeight[ChickWeight$weight>70,]
data_with_weight_greater_than_ten = ChickWeight[ChickWeight$weight > 70, ]
head(data_with_weight_greater_than_ten)
diet_freq = table(ChickWeight$Diet)
diet_freq = table(ChickWeight$Diet)
print(diet_freq)
table(ChickWeight$weight, ChickWeight$Diet)
barplot(diet_freq)
help(barplot)
barplot( ylim = c(0,250), ylab = "Observations", xlab = "Diet Type", main = "Chick Weight Diet")
barplot(table(ChickWeight$Diet),ylim = c(0,250), ylab = "Observations", xlab = "Diet Type", main = "Chick Weight Diet")
plot(density(ChickWeight$weight), main = "PDF of Chick Weight Variable")
plot(density(ChickWeight$weight), main="PDF of Chick Weight Variable", xlab = "Weight", ylab = "Probability")
print("?")
if(1+1==2){
print ("knew it!)")} else {
print("?")
}
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
chick_weight = ChickWeight$weight[1]
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
chick_weight = ChickWeight$weight[random]
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
chick_weight = ChickWeight$weight[random]
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
chick_weight = ChickWeight$weight[random]
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
chick_weight = ChickWeight$weight[random]
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
chick_weight = ChickWeight$weight[5]
if (chick_weight == 100) {
print("Fatty")
} else if (chick_weight > 50) {
print("Still a fatty")
} else if (chick_weight < 20) {
print("Skinny-legs")
} else {
print("42 is a normal weight!")
}
five_times = c(1:5)
for(i in five_times) {
print(i)
}
numofchicks = length(ChickWeight$weight)
type(numofchicks)
summary(numofchicks)
head(ChickWeight$weight)
head(ChickWeight$weight)
for(i in c(1:numofchicks)) {
ChickWeight$weight[i] += 5}
for(i in c(1:numofchicks)) {
ChickWeight$weight[i] = ChickWeight$weight[i]+5}
head(ChickWeight$weight)
View(ChickWeight)
ChickWeight$FattyIndicator = 0
View(ChickWeight)
h
for (i in c(1:nrow(ChickWeight))) {
if (ChickWeight$weight[i] > 100) {
ChickWeight$FattyIndicator[i] = 1
} else {
ChickWeight$FattyIndicator[i] = 0
}
}
ChickWeight
getwd()
getwd()
getwd()
setwd("~/")
ls()
ls()
x = c(1,3,5)
y = c(3,2,10)
rbind(x,y)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
getwd()
setwd("~/Coursera -R/Coursera_week_one_notes")
quizdata = read.csv("hw1_data.csv")
quizdata
quizdata [1:2,]
nrows(quizdata)
quizdata(nrows)
nrow(quizdata)
quizdata(152:153,)
quizdata[152:153,]
quizdata[ozone[47]]
quizdata$ozone[47]
quizdata$Ozone[47]
nrow(quizdata$ozone)
nrow(quizdata$Ozone)
bad = is.na(quizdata$Ozone)
len(bad)
dim(bad)
bad
length??
bad
help(length)
length(bad)
z[bad]
quizdata$Ozone[bad]
z=quizdata$Ozone[bad]
length(z)
Ozone = quizdata$Ozone[!bad]
mean(Ozone)
y = quizdata[quizdata$Ozone> 31, quizdata$Temp >90]
y = quizdata[quizdata$Ozone> 31]
y = quizdata$Ozone[quizdata$Ozone> 31]
newdata = subset(quizdata, Ozone > 31 | Temp < 90)
newdata
newdata = subset(quizdata, Ozone > 31 && Temp < 90)
newdata
help(subset)
newdata = subset(quizdata, (Ozone > 31) && (Temp < 90))
newdata = quizdata[(quizdata$Ozone>31) & (quizdata$Temp < 90),]
newdata
newdata = quizdata[(quizdata$Ozone>31) & (quizdata$Temp < 90)]
newdata = quizdata[(quizdata$Ozone>31) & (quizdata$Temp < 90),]
mean(newdata$Solar.R)
mean(Solar.R)
mean(newdata)
mean(newdata$Solar.R)
help(complete.cases)
complete.cases(newdata)
bad = complete.cases(newdata)
newcomplete = newdata[!bad]
newcomplete = newdata[!bad,]
newcomplete
bad = complete.cases(newdata)
help(complete.cases)
newdata
bad = is.na(newdata)
newcomplete = newdata[!bad,]
newcomplete
newdata
help(na.rm)
help(na)
mean(newdata$Solar.R, na.rm=TRUE)
newdata = quizdata[(quizdata$Ozone>31) & (quizdata$Temp > 90),]
mean(newdata$Solar.R, na.rm=TRUE)
mean(quizdata$Temp, Month == 6)
mean(quizdata$Temp, quizdata$Month == 6)
help(mean)
mean(quizdata$Temp)
mean(quizdata$Temp, quizdata$Month == 6)
mean(quizdata$Temp,trim=0,na.rm=FALSE, quizdata$Month == 6)
mean(quizdata$Temp,trim=0,na.rm=TRUE, quizdata$Month == 6)
mean(quizdata$Temp,trim=0,na.rm=TRUE, quizdata$Month == 6)
mean(newdata$Temp,trim=0,na.rm=TRUE, newdata$Month == 6)
mean(newdata$Temp,trim=0,na.rm=FALSE, newdata$Month == 6)
mean(newdata$Temp,trim=0,na.rm=TRUE, newdata$Month == 6)
mean(quizdata$Temp,trim=0,na.rm=TRUE, quizdata$Month == 6)
June = quizdata[quizdata$Month == 6]
June = quizdata[quizdata$Month == 6,]
mean(June$Temp)
May = quizdata[quizdata$Month ==5]
May = quizdata[quizdata$Month ==5,]
help(rmax)
??max
max(May$Ozone)
max(May$Ozone, na.rm = FALSE)
max(May$Ozone, na.rm = TRUE)
x <- c(1,3, 5) and y <- c(3, 2, 10)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind*=(x,y)
cbind=(x,y)
cbind(x,y)
quizdata[152:153,]
